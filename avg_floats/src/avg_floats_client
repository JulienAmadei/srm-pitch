#!/usr/bin/env python3


## Simple rospy service client that calls a service to average
## five floats. 

PKG = 'avg_floats' # this package name

import roslib; roslib.load_manifest(PKG) 

import sys
import os

import rospy

# Imports the AvgFloats service 
from avg_floats.srv import *
from std_msgs.msg import String

## Average five floats using the average_five_floats service
## @param x int: first number to add
## @param y int: second number to add
def average_five_floats_client(a, b, c, d, e):

    # NOTE: you don't have to call rospy.init_node() to make calls against
    # a service. This is because service clients do not have to be
    # nodes.

    # Block until the service is available
    rospy.wait_for_service('avg_five_floats')
    
    try:
        # Create a handle to the service
        avg_five_floats = rospy.ServiceProxy('avg_five_floats', AvgFloats)
        
        print("Requesting the average of (%s, %s, %s, %s, %s)" % (a, b, c, d, e))
        
        resp = avg_five_floats.call(AvgFloatsRequest(a, b, c, d, e))

        if not resp.avg == (a + b + c + d +e)/5:
            raise Exception("Test failure, returned avg was %s"%resp.avg)
        
        return resp.avg

    except rospy.ServiceException as e:
        print("Service call failed: %s"%e)

if __name__ == "__main__":
    argv = rospy.myargv()

    if len(argv) != 6:
        print("Please input 5 floats.")
    else:     
        a = float(argv[1])
        b = float(argv[2])
        c = float(argv[3])
        d = float(argv[4])
        e = float(argv[5])
        
        print("The average is: %s"%(average_five_floats_client(a, b, c, d, e)))
        sys.exit(1)
